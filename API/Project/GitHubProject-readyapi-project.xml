<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="0fc96455-4207-4910-8c1d-5e99bd5eac5a" created="3.46.0" activeEnvironment="Default environment" encryptionMode="Not encrypted" name="GitHubProject" projectVersion="" updated="3.46.0 2023-05-11T09:29:01Z" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="ccf15111-8a1f-4003-aea4-26000a1882e8" wadlVersion="http://wadl.dev.java.net/2009/02" name="https://api.github.com" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings id="5dc00ed2-4b09-4559-aafd-11464bde4a66"/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://api.github.com</con:endpoint></con:endpoints><con:resource name="Emails" path="/user/emails" id="4bd9794e-1cf7-489b-bd4d-66a0700b42a3"><con:settings/><con:parameters/><con:method name="Emails" id="8180add5-33c7-49ec-871c-8e77d4697339" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:request name="Request 1" id="313ec78c-39bd-42de-86f1-114f3ce87b97" mediaType="application/json"><con:settings/><con:endpoint>https://api.github.com</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="Keys" path="/user/keys" id="773158b1-45fc-47ab-b084-4dd62d775fb7"><con:settings/><con:parameters/><con:method name="Keys" id="6e4873dc-8e76-420b-acb8-c28bfdc98f79" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:keys="https://api.github.com/user/keys">keys:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="2b54e703-256d-4381-86eb-d42bacfdde0b" mediaType="application/json"><con:settings/><con:endpoint>https://api.github.com</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="KeyId" path="/user/keys/{keyId}" id="313bf8ef-077c-4803-8d9f-605897e1378a"><con:settings/><con:parameters/><con:method name="KeyId" id="a5591630-e594-4935-98ba-83452a2897b5" method="DELETE"><con:settings/><con:parameters><con:parameter required="true"><con:name>keyId</con:name><con:value>keyId</con:value><con:style>TEMPLATE</con:style><con:default>keyId</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="bf701ab1-f9ac-4c8c-b7b4-4ab827ff64d3" mediaType="application/json"><con:settings/><con:endpoint>https://api.github.com</con:endpoint><con:parameters><con:entry key="keyId" value="keyId"/></con:parameters><con:parameterOrder><con:entry>keyId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:testSuite id="daf1138d-c6ef-47b2-8208-3e9f1f658fab" name="https://api.github.com Test Suite"><con:settings id="f271cbe9-fb07-4a9d-825d-89cf5350db66"/><con:runType>SEQUENTIAL</con:runType><con:testCase id="90453915-8bed-4047-883d-fc9d7d131d65" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="Test Case" searchProperties="true" timeout="0"><con:settings/><con:testStep type="restrequest" name="Get_request" id="c82c2815-dc37-404d-bea2-3722a74a11e5"><con:settings/><con:config service="https://api.github.com" resourcePath="/user/emails" methodName="Emails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_request" id="313ec78c-39bd-42de-86f1-114f3ce87b97" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://api.github.com</con:endpoint><con:request/><con:originalUri>https://api.github.com/user/emails</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="edc68b00-1f91-4a6e-b92b-f42d2b1dd4b9" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>projectToken</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Post_request" id="c23c821a-e6cb-48f3-a7bc-0e0c9d4d979a"><con:settings/><con:config service="https://api.github.com" resourcePath="/user/keys" methodName="Keys" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Post_request" id="2b54e703-256d-4381-86eb-d42bacfdde0b" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://api.github.com</con:endpoint><con:request>{
	"title": "gitProjectKeyCreate",
	"key": "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIHp2XLJUXnaaHBq7FFJzCIv6LnlmBSKHz5r5uqIJRiht"
}
</con:request><con:originalUri>https://api.github.com/user/keys</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="6386a232-bc5e-44ba-8418-8250291d24fb" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>201</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>projectToken</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="e15ff249-b601-456f-b919-e910e3ff9acf"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>getIdTransfer</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Post_request</con:sourceStep><con:sourcePath>$['id']</con:sourcePath><con:targetType>keyId</con:targetType><con:targetStep>Delete_request</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Delete_request" id="89a71453-a8fb-4364-9fed-dd05b8db6043"><con:settings/><con:config service="https://api.github.com" resourcePath="/user/keys/{keyId}" methodName="KeyId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete_request" id="bf701ab1-f9ac-4c8c-b7b4-4ab827ff64d3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://api.github.com</con:endpoint><con:request/><con:originalUri>https://api.github.com/user/keys/82783453</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="18c0db95-29f0-4e1f-a4c0-1c10447d21d7" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>projectToken</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:entry key="keyId" value="82783453"/></con:parameters><con:parameterOrder><con:entry>keyId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:jmsConnectionContainer/><con:oAuth2ProfileContainer><con:oAuth2Profile><con:name>projectToken</con:name><con:type>OAuth 2.0</con:type><con:accessToken>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</con:accessToken><con:accessTokenPosition>HEADER</con:accessTokenPosition><con:accessTokenStatus>ENTERED_MANUALLY</con:accessTokenStatus><con:accessTokenStartingStatus>ENTERED_MANUALLY</con:accessTokenStartingStatus><con:oAuth2Flow>AUTHORIZATION_CODE_GRANT</con:oAuth2Flow><con:refreshAccessTokenMethod>AUTOMATIC</con:refreshAccessTokenMethod><con:jwtConfiguration/><con:responseType>id_token</con:responseType></con:oAuth2Profile></con:oAuth2ProfileContainer><con:oAuth1ProfileContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest"><con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script></con:eventHandlers><con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep"><con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script></con:eventHandlers><con:authRepository><con:oAuth20AuthEntry><con:name>projectToken</con:name><con:type>OAuth 2.0</con:type><con:accessToken>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</con:accessToken><con:accessTokenPosition>HEADER</con:accessTokenPosition><con:accessTokenStatus>ENTERED_MANUALLY</con:accessTokenStatus><con:accessTokenStartingStatus>ENTERED_MANUALLY</con:accessTokenStartingStatus><con:oAuth2Flow>AUTHORIZATION_CODE_GRANT</con:oAuth2Flow><con:refreshAccessTokenMethod>AUTOMATIC</con:refreshAccessTokenMethod><con:jwtConfiguration/><con:responseType>id_token</con:responseType></con:oAuth20AuthEntry></con:authRepository><con:tags/></con:soapui-project>